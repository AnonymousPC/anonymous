In file included from [01m[Kgeneric/basic/interface.hpp:37[m[K,
                 from [01m[Kmain.cpp:1[m[K:
D:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges: In instantiation of '[01m[Kconstexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...) [35m[K[with _Cont = std::map<int, int>; _Rg = std::vector<int>; _Args = {}][m[K[m[K':
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, decltype((forward_like<_Self>)((declval<_BoundArgs>)()))...> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >::[01;32m[Koperator()[m[K(this _Self&&, _Range&&) [35m[K[with _Self = std::ranges::__detail::_To<std::map<int, int> >; _Range = {}][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >; _Range = std::vector<int>][m[K[m[K'
[01m[Kmain.cpp:14:61:[m[K   required from here
   14 |     std::vector<int>() | std::ranges::to<std::map<int,int>>([01;36m[K)[m[K;
      |                                                             [01;36m[K^[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9354:25:[m[K [01;31m[Kerror: [m[Kstatic assertion failed
 9354 |           static_assert([01;31m[Kinput_range<range_reference_t<_Rg>>[m[K);
      |                         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9354:25:[m[K [01;36m[Knote: [m[Kconstraints not satisfied
In file included from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_algobase.h:38[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_algo.h:38[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/algorithm:63[m[K,
                 from [01m[Kgeneric/basic/interface.hpp:21[m[K:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:499:13:[m[K   required for the satisfaction of '[01m[Krange<_Tp>[m[K' [with _Tp = int&]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:499:21:[m[K   in requirements with '[01m[K_Tp& __t[m[K' [with _Tp = int&]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:501:22:[m[K [01;36m[Knote: [m[Kthe required expression '[01m[Kstd::ranges::_Cpo::begin(__t)[m[K' is invalid
  501 |         [01;36m[Kranges::begin(__t)[m[K;
      |         [01;36m[K~~~~~~~~~~~~~^~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:502:20:[m[K [01;36m[Knote: [m[Kthe required expression '[01m[Kstd::ranges::_Cpo::end(__t)[m[K' is invalid
  502 |         [01;36m[Kranges::end(__t)[m[K;
      |         [01;36m[K~~~~~~~~~~~^~~~~[m[K
[01m[Kcc1plus.exe:[m[K [01;36m[Knote: [m[Kset '[01m[K-fconcepts-diagnostics-depth=[m[K' to at least 2 for more detail
D:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges: In instantiation of '[01m[Kstd::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> [35m[K[with _Elt = int&][m[K[m[K':
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:2640:26:[m[K   required by substitution of '[01m[Ktemplate<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::[01;32m[K_S_test[m[K(int) [35m[K[with _Fn = std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>&; _Args = {int&}][m[K[m[K'
 2640 |       [01;36m[Kstd::declval<_Fn>()(std::declval<_Args>()...)[m[K
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:2651:60:[m[K   required from '[01m[Kstruct std::__result_of_impl<false, false, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>&, int&>[m[K'
 2651 |       using type = decltype([01;36m[K_S_test<_Functor, _ArgTypes...>(0)[m[K);
      |                             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:2656:12:[m[K   required from '[01m[Kstruct std::__invoke_result<std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>&, int&>[m[K'
 2656 |     struct [01;36m[K__invoke_result[m[K
      |            [01;36m[K^~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:3159:12:[m[K   required from '[01m[Kstruct std::is_invocable<std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>&, int&>[m[K'
 3159 |     struct [01;36m[Kis_invocable[m[K
      |            [01;36m[K^~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:3523:71:[m[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:2195:5:[m[K   required by substitution of '[01m[Ktemplate<class _Range, class _Fp> std::ranges::[01;32m[Ktransform_view[m[K(_Range&&, _Fp)-> transform_view<views::all_t<_Range>, _Fp> [35m[K[with _Range = std::ranges::ref_view<std::vector<int> >; _Fp = std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>][m[K[m[K'
 2195 |     [01;36m[Ktransform_view[m[K(_Range&&, _Fp) -> transform_view<views::all_t<_Range>, _Fp>;
      |     [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, const _Arg&> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >::[01;32m[Koperator()[m[K(_Range&&) const [35m[K[with _Range = std::ranges::views::_Transform][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >; _Range = std::ranges::ref_view<std::vector<int> >][m[K[m[K'
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:43:[m[K   required from '[01m[Kconstexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...) [35m[K[with _Cont = std::map<int, int>; _Rg = std::vector<int>; _Args = {}][m[K[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, decltype((forward_like<_Self>)((declval<_BoundArgs>)()))...> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >::[01;32m[Koperator()[m[K(this _Self&&, _Range&&) [35m[K[with _Self = std::ranges::__detail::_To<std::map<int, int> >; _Range = {}][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >; _Range = std::vector<int>][m[K[m[K'
[01m[Kmain.cpp:14:61:[m[K   required from here
   14 |     std::vector<int>() | std::ranges::to<std::map<int,int>>([01;36m[K)[m[K;
      |                                                             [01;36m[K^[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9360:34:[m[K [01;31m[Kerror: [m[Kno matching function for call to '[01m[Kto<_ValT>(int&)[m[K'
 9360 |                   return [01;31m[Kranges::to<_ValT>[m[K(std::forward<_Elt>(__elem));
      |                          [01;31m[K~~~~~~~~^~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9302:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Cont, class _Rg, class ... _Args>  requires (input_range<_Rg>) && !(view<_Cont>) constexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...)[m[K'
 9302 |     [01;36m[Kto[m[K [[nodiscard]] (_Rg&& __r, _Args&&... __args)
      |     [01;36m[K^~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9302:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9302:5:[m[K [01;36m[Knote: [m[Kconstraints not satisfied
D:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h: In substitution of '[01m[Ktemplate<class _Cont, class _Rg, class ... _Args>  requires (input_range<_Rg>) && !(view<_Cont>) constexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...) [35m[K[with _Cont = std::pair<const int, int>; _Rg = int&; _Args = {}][m[K[m[K':
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9360:20:[m[K   required from '[01m[Kstd::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> [35m[K[with _Elt = int&][m[K[m[K'
 9360 |                   return [01;36m[Kranges::to<_ValT>[m[K(std::forward<_Elt>(__elem));
      |                          [01;36m[K~~~~~~~~^~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:2640:26:[m[K   required by substitution of '[01m[Ktemplate<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::[01;32m[K_S_test[m[K(int) [35m[K[with _Fn = std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>&; _Args = {int&}][m[K[m[K'
 2640 |       [01;36m[Kstd::declval<_Fn>()(std::declval<_Args>()...)[m[K
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:2651:60:[m[K   required from '[01m[Kstruct std::__result_of_impl<false, false, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>&, int&>[m[K'
 2651 |       using type = decltype([01;36m[K_S_test<_Functor, _ArgTypes...>(0)[m[K);
      |                             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:2656:12:[m[K   required from '[01m[Kstruct std::__invoke_result<std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>&, int&>[m[K'
 2656 |     struct [01;36m[K__invoke_result[m[K
      |            [01;36m[K^~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/type_traits:3159:12:[m[K   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:2195:5:[m[K   required by substitution of '[01m[Ktemplate<class _Range, class _Fp> std::ranges::[01;32m[Ktransform_view[m[K(_Range&&, _Fp)-> transform_view<views::all_t<_Range>, _Fp> [35m[K[with _Range = std::ranges::ref_view<std::vector<int> >; _Fp = std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)>][m[K[m[K'
 2195 |     [01;36m[Ktransform_view[m[K(_Range&&, _Fp) -> transform_view<views::all_t<_Range>, _Fp>;
      |     [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, const _Arg&> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >::[01;32m[Koperator()[m[K(_Range&&) const [35m[K[with _Range = std::ranges::views::_Transform][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >; _Range = std::ranges::ref_view<std::vector<int> >][m[K[m[K'
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:43:[m[K   required from '[01m[Kconstexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...) [35m[K[with _Cont = std::map<int, int>; _Rg = std::vector<int>; _Args = {}][m[K[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, decltype((forward_like<_Self>)((declval<_BoundArgs>)()))...> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >::[01;32m[Koperator()[m[K(this _Self&&, _Range&&) [35m[K[with _Self = std::ranges::__detail::_To<std::map<int, int> >; _Range = {}][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >; _Range = std::vector<int>][m[K[m[K'
[01m[Kmain.cpp:14:61:[m[K   required from here
   14 |     std::vector<int>() | std::ranges::to<std::map<int,int>>([01;36m[K)[m[K;
      |                                                             [01;36m[K^[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:499:13:[m[K   required for the satisfaction of '[01m[Krange<_Tp>[m[K' [with _Tp = int&]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:588:13:[m[K   required for the satisfaction of '[01m[Kinput_range<_Rg>[m[K' [with _Rg = int&]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:499:21:[m[K   in requirements with '[01m[K_Tp& __t[m[K' [with _Tp = int&]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:501:22:[m[K [01;36m[Knote: [m[Kthe required expression '[01m[Kstd::ranges::_Cpo::begin(__t)[m[K' is invalid
  501 |         [01;36m[Kranges::begin(__t)[m[K;
      |         [01;36m[K~~~~~~~~~~~~~^~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ranges_base.h:502:20:[m[K [01;36m[Knote: [m[Kthe required expression '[01m[Kstd::ranges::_Cpo::end(__t)[m[K' is invalid
  502 |         [01;36m[Kranges::end(__t)[m[K;
      |         [01;36m[K~~~~~~~~~~~^~~~~[m[K
D:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges: In instantiation of '[01m[Kconstexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...) [35m[K[with _Cont = std::map<int, int>; _Rg = std::vector<int>; _Args = {}][m[K[m[K':
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, decltype((forward_like<_Self>)((declval<_BoundArgs>)()))...> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >::[01;32m[Koperator()[m[K(this _Self&&, _Range&&) [35m[K[with _Self = std::ranges::__detail::_To<std::map<int, int> >; _Range = {}][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >; _Range = std::vector<int>][m[K[m[K'
[01m[Kmain.cpp:14:61:[m[K   required from here
   14 |     std::vector<int>() | std::ranges::to<std::map<int,int>>([01;36m[K)[m[K;
      |                                                             [01;36m[K^[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;31m[Kerror: [m[Kno match for '[01m[Koperator|[m[K' (operand types are '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' and '[01m[Kstd::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >[m[K')
 9357 |           return ranges::to<_Cont>([01;31m[Kref_view(__r) | views::transform([m[K
      |                                    [01;31m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;31m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;31m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;31m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;31m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;31m[K~~[m[K                                
In file included from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute/detail/is_contiguous_iterator.hpp:15[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute/algorithm/copy.hpp:32[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute/algorithm/fill.hpp:25[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute/container/array.hpp:23[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute/algorithm/reduce.hpp:22[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute/algorithm/accumulate.hpp:20[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute/algorithm.hpp:18[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/compute.hpp:14[m[K,
                 from [01m[Kgeneric/basic/interface.hpp:167[m[K:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/valarray:1203:1:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__bitwise_or, _Tp>::result_type> std::[01;32m[Koperator|[m[K(const typename valarray<_Tp>::value_type&, const valarray<_Tp>&)[m[K'
 1203 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(|, __bitwise_or)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/valarray:1203:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >[m[K' is not derived from '[01m[Kconst std::valarray<_Tp>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/valarray:1203:1:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__bitwise_or, _Tp>::result_type> std::[01;32m[Koperator|[m[K(const valarray<_Tp>&, const typename valarray<_Tp>::value_type&)[m[K'
 1203 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(|, __bitwise_or)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/valarray:1203:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' is not derived from '[01m[Kconst std::valarray<_Tp>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/valarray:1203:1:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__bitwise_or, _Tp>::result_type> std::[01;32m[Koperator|[m[K(const valarray<_Tp>&, const valarray<_Tp>&)[m[K'
 1203 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(|, __bitwise_or)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/valarray:1203:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' is not derived from '[01m[Kconst std::valarray<_Tp>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
In file included from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/valarray:605[m[K:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__bitwise_or, typename _Dom1::value_type>::result_type> std::[01;32m[Koperator|[m[K(const valarray<typename _Dom::value_type>&, const _Expr<_Dom1, typename _Dom1::value_type>&)[m[K'
  412 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(|, struct std::__bitwise_or)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >[m[K' is not derived from '[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__bitwise_or, typename _Dom1::value_type>::result_type> std::[01;32m[Koperator|[m[K(const _Expr<_Dom1, typename _Dom1::value_type>&, const valarray<typename _Dom::value_type>&)[m[K'
  412 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(|, struct std::__bitwise_or)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' is not derived from '[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__bitwise_or, typename _Dom1::value_type>::result_type> std::[01;32m[Koperator|[m[K(const typename _Dom::value_type&, const _Expr<_Dom1, typename _Dom1::value_type>&)[m[K'
  412 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(|, struct std::__bitwise_or)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >[m[K' is not derived from '[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__bitwise_or, typename _Dom1::value_type>::result_type> std::[01;32m[Koperator|[m[K(const _Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)[m[K'
  412 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(|, struct std::__bitwise_or)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' is not derived from '[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__bitwise_or, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__bitwise_or, typename _Dom1::value_type>::result_type> std::[01;32m[Koperator|[m[K(const _Expr<_Dom1, typename _Dom1::value_type>&, const _Expr<_Dom2, typename _Dom2::value_type>&)[m[K'
  412 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(|, struct std::__bitwise_or)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/valarray_after.h:412:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' is not derived from '[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
In file included from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/regex:40[m[K,
                 from [01m[Kgeneric/basic/interface.hpp:38[m[K:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bitset:1567:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<long long unsigned int _Nb> constexpr std::bitset<_Nb> std::[01;32m[Koperator|[m[K(const bitset<_Nb>&, const bitset<_Nb>&)[m[K'
 1567 |     [01;36m[Koperator[m[K|(const bitset<_Nb>& __x, const bitset<_Nb>& __y) _GLIBCXX_NOEXCEPT
      |     [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bitset:1567:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:50:[m[K [01;36m[Knote: [m[K  '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' is not derived from '[01m[Kconst std::bitset<_Nb>[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:955:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&)[m[K'
  955 |     [01;36m[Koperator[m[K|(_Range&& __r, _Self&& __self)
      |     [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:955:5:[m[K [01;36m[Knote: [m[K  substitution of deduced template arguments resulted in errors seen above
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:964:5:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Ktemplate<class _Lhs, class _Rhs>  requires (__is_range_adaptor_closure<_Lhs>) && (__is_range_adaptor_closure<_Rhs>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Lhs&&, _Rhs&&)[m[K'
  964 |     [01;36m[Koperator[m[K|(_Lhs&& __lhs, _Rhs&& __rhs)
      |     [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:964:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:964:5:[m[K [01;36m[Knote: [m[Kconstraints not satisfied
D:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges: In substitution of '[01m[Ktemplate<class _Lhs, class _Rhs>  requires (__is_range_adaptor_closure<_Lhs>) && (__is_range_adaptor_closure<_Rhs>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Lhs&&, _Rhs&&) [35m[K[with _Lhs = std::ranges::ref_view<std::vector<int> >; _Rhs = std::ranges::views::__adaptor::_Partial<std::ranges::views::_Transform, std::ranges::to<std::map<int, int>, std::vector<int> >(std::vector<int>&&)::<lambda(_Elt&&)> >][m[K[m[K':
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:9357:43:[m[K   required from '[01m[Kconstexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...) [35m[K[with _Cont = std::map<int, int>; _Rg = std::vector<int>; _Args = {}][m[K[m[K'
 9357 |           return ranges::to<_Cont>([01;36m[Kref_view(__r) | views::transform([m[K
      |                                    [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
 9358 | [01;36m[K                []<typename _Elt>(_Elt&& __elem) {[m[K
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9359 | [01;36m[K                  using _ValT = range_value_t<_Cont>;[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9360 | [01;36m[K                  return ranges::to<_ValT>(std::forward<_Elt>(__elem));[m[K
      |                   [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
 9361 | [01;36m[K                })[m[K, std::forward<_Args>(__args)...);
      |                 [01;36m[K~~[m[K                                
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, decltype((forward_like<_Self>)((declval<_BoundArgs>)()))...> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >::[01;32m[Koperator()[m[K(this _Self&&, _Range&&) [35m[K[with _Self = std::ranges::__detail::_To<std::map<int, int> >; _Range = {}][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >; _Range = std::vector<int>][m[K[m[K'
[01m[Kmain.cpp:14:61:[m[K   required from here
   14 |     std::vector<int>() | std::ranges::to<std::map<int,int>>([01;36m[K)[m[K;
      |                                                             [01;36m[K^[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:945:13:[m[K   required for the satisfaction of '[01m[K__is_range_adaptor_closure<_Lhs>[m[K' [with _Lhs = std::ranges::ref_view<std::vector<int, std::allocator<int> > >]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:946:9:[m[K   in requirements with '[01m[K_Tp __t[m[K' [with _Tp = std::ranges::ref_view<std::vector<int, std::allocator<int> > >]
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:946:70:[m[K [01;36m[Knote: [m[Kthe required expression '[01m[Kstd::ranges::views::__adaptor::__is_range_adaptor_closure_fn(__t, __t)[m[K' is invalid
  946 |       = requires (_Tp __t) { [01;36m[K__adaptor::__is_range_adaptor_closure_fn(__t, __t)[m[K; };
      |                              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
In file included from [01m[Kgeneric/basic/interface.hpp:23[m[K:
D:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges: In instantiation of '[01m[Kconstexpr _Cont std::ranges::[01;32m[Kto[m[K(_Rg&&, _Args&& ...) [35m[K[with _Cont = std::map<int, int>; _Rg = std::vector<int>; _Args = {}][m[K[m[K':
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   recursively required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires  __adaptor_invocable<_Adaptor, _Range, decltype((forward_like<_Self>)((declval<_BoundArgs>)()))...> constexpr auto std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >::[01;32m[Koperator()[m[K(this _Self&&, _Range&&) [35m[K[with _Self = std::ranges::__detail::_To<std::map<int, int> >; _Range = {}][m[K[m[K'
  915 |       = requires { [01;36m[Kstd::declval<_Adaptor>()(declval<_Args>()...)[m[K; };
      |                    [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ranges:915:44:[m[K   required by substitution of '[01m[Ktemplate<class _Self, class _Range>  requires (__is_range_adaptor_closure<_Self>) && (__adaptor_invocable<_Self, _Range>) constexpr auto std::ranges::views::__adaptor::[01;32m[Koperator|[m[K(_Range&&, _Self&&) [35m[K[with _Self = std::ranges::views::__adaptor::_Partial<std::ranges::__detail::_To<std::map<int, int> > >; _Range = std::vector<int>][m[K[m[K'
[01m[Kmain.cpp:14:61:[m[K   required from here
   14 |     std::vector<int>() | std::ranges::to<std::map<int,int>>([01;36m[K)[m[K;
      |                                                             [01;36m[K^[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/charconv:627:3:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Kconstexpr std::chars_format std::[01;32m[Koperator|[m[K(chars_format, chars_format)[m[K'
  627 |   [01;36m[Koperator[m[K|(chars_format __lhs, chars_format __rhs) noexcept
      |   [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/charconv:627:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' to '[01m[Kstd::chars_format[m[K'
  627 |   operator|([01;36m[Kchars_format __lhs[m[K, chars_format __rhs) noexcept
      |             [01;36m[K~~~~~~~~~~~~~^~~~~[m[K
In file included from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/memory_resource.h:38[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/string:67[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/locale_classes.h:40[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ios_base.h:41[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/ios:44[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/istream:40[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/sstream:40[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/chrono:45[m[K,
                 from [01m[Kgeneric/basic/interface.hpp:24[m[K:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/cstddef:136:3:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Kconstexpr std::byte std::[01;32m[Koperator|[m[K(byte, byte)[m[K'
  136 |   [01;36m[Koperator[m[K|(byte __l, byte __r) noexcept
      |   [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/cstddef:136:18:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' to '[01m[Kstd::byte[m[K'
  136 |   operator|([01;36m[Kbyte __l[m[K, byte __r) noexcept
      |             [01;36m[K~~~~~^~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ios_base.h:89:3:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Kconstexpr std::_Ios_Fmtflags std::[01;32m[Koperator|[m[K(_Ios_Fmtflags, _Ios_Fmtflags)[m[K'
   89 |   [01;36m[Koperator[m[K|(_Ios_Fmtflags __a, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
      |   [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ios_base.h:89:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' to '[01m[Kstd::_Ios_Fmtflags[m[K'
   89 |   operator|([01;36m[K_Ios_Fmtflags __a[m[K, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
      |             [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ios_base.h:139:3:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Kconstexpr std::_Ios_Openmode std::[01;32m[Koperator|[m[K(_Ios_Openmode, _Ios_Openmode)[m[K'
  139 |   [01;36m[Koperator[m[K|(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
      |   [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ios_base.h:139:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' to '[01m[Kstd::_Ios_Openmode[m[K'
  139 |   operator|([01;36m[K_Ios_Openmode __a[m[K, _Ios_Openmode __b) _GLIBCXX_NOTHROW
      |             [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ios_base.h:186:3:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Kconstexpr std::_Ios_Iostate std::[01;32m[Koperator|[m[K(_Ios_Iostate, _Ios_Iostate)[m[K'
  186 |   [01;36m[Koperator[m[K|(_Ios_Iostate __a, _Ios_Iostate __b) _GLIBCXX_NOTHROW
      |   [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/ios_base.h:186:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' to '[01m[Kstd::_Ios_Iostate[m[K'
  186 |   operator|([01;36m[K_Ios_Iostate __a[m[K, _Ios_Iostate __b) _GLIBCXX_NOTHROW
      |             [01;36m[K~~~~~~~~~~~~~^~~[m[K
In file included from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/atomic:50[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/oneapi/tbb/detail/_utils.h:22[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/oneapi/tbb/detail/_range_common.h:21[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/oneapi/tbb/blocked_range.h:22[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/tbb/blocked_range.h:17[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/pstl/parallel_backend_tbb.h:24[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/pstl/parallel_backend.h:20[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/pstl/algorithm_impl.h:22[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/pstl/glue_execution_defs.h:50[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/execution:39[m[K,
                 from [01m[Kgeneric/basic/interface.hpp:27[m[K:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/atomic_base.h:103:3:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Kconstexpr std::memory_order std::[01;32m[Koperator|[m[K(memory_order, __memory_order_modifier)[m[K'
  103 |   [01;36m[Koperator[m[K|(memory_order __m, __memory_order_modifier __mod) noexcept
      |   [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/bits/atomic_base.h:103:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' to '[01m[Kstd::memory_order[m[K'
  103 |   operator|([01;36m[Kmemory_order __m[m[K, __memory_order_modifier __mod) noexcept
      |             [01;36m[K~~~~~~~~~~~~~^~~[m[K
In file included from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/asio/detail/future.hpp:19[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/asio/packaged_task.hpp:19[m[K,
                 from [01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/boost/asio.hpp:149[m[K,
                 from [01m[Kgeneric/basic/interface.hpp:163[m[K:
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/future:163:20:[m[K [01;36m[Knote: [m[Kcandidate: '[01m[Kconstexpr std::launch std::[01;32m[Koperator|[m[K(launch, launch)[m[K'
  163 |   constexpr launch [01;36m[Koperator[m[K|(launch __x, launch __y) noexcept
      |                    [01;36m[K^~~~~~~~[m[K
[01m[KD:/My Passport/My Passport - Application/MSYS/ucrt64/include/c++/14.2.0/future:163:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from '[01m[Kstd::ranges::ref_view<std::vector<int> >[m[K' to '[01m[Kstd::launch[m[K'
  163 |   constexpr launch operator|([01;36m[Klaunch __x[m[K, launch __y) noexcept
      |                              [01;36m[K~~~~~~~^~~[m[K
